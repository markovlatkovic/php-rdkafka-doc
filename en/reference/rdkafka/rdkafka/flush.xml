<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="rdkafka.flush" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RdKafka::flush</refname>
  <refpurpose>Wait until all outstanding produce requests, et.al, are completed.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>integer</type><methodname>RdKafka::flush</methodname>
   <methodparam><type>integer</type><parameter>timeout_ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Wait until all outstanding produce requests, et.al, are completed.
   This should typically be done prior to destroying a producer instance
   to make sure all queued and in-flight produce requests are completed
   before terminating.
   This function will call poll() and thus trigger callbacks.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>timeout_ms</parameter> (<type>integer</type>)</term>
    <listitem>
     <para>
      Specifies the maximum amount of time (in milliseconds) that the call will block. To wait indefinitely provide -1.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   In case of success returns <constant>RD_KAFKA_RESP_ERR_NO_ERROR</constant>, in case of timeout <constant>RD_KAFKA_RESP_ERR__TIMED_OUT</constant> and if not called on a producer instance <constant>RD_KAFKA_RESP_ERR__NOT_IMPLEMENTED</constant>.
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
