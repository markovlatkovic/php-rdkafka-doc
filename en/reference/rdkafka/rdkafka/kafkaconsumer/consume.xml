<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="rdkafka-kafkaconsumer.consume" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>RdKafka\KafkaConsumer::consume</refname>
  <refpurpose>Consume message and triggers callbacks</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>RdKafka\Message</type><methodname>RdKafka\KafkaConsumer::consume</methodname>
   <methodparam><type>int</type><parameter>timeout_ms</parameter></methodparam>
  </methodsynopsis>
  <para>
   Consume message or get error event, triggers callbacks.
  </para>
  <para>
   Will automatically call registered callbacks for any such queued events, including <link id="rdkafka-conf.setrebalancecb">rebalance_cb</link>, event_cb, commit_cb, etc.
  </para>
  <note>
   <para>
    An application should make sure to call consume() at regular
    intervals, even if no messages are expected, to serve any
    queued callbacks waiting to be called. This is especially
    important when a rebalnce_cb has been registered as it needs
    to be called and handled properly to synchronize internal
    consumer state.
   </para>
  </note>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>timeout_ms</parameter> (<type>int</type>)</term>
    <listitem>
     <para>
      Timeout (milliseconds)
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns a <classname>RdKafka\Message</classname>. On error or timeout, <property>RdKafka\Message::$err</property> is != <constant>RD_KAFKA_ERR_NO_ERROR</constant>, and other properties should be ignored.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simplelist>
   &rdkafka.error.exception;
   &rdkafka.error.argumentparsing;
  </simplelist>
 </refsect1>


 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><function>RdKafka\KafkaConsumer::consume</function> example</title>
   <programlisting role="php">
<![CDATA[
<?php
while (true) {
    $message = $kafkaConsumer->consume(3600e3);
    switch ($message->err) {
        case RD_KAFKA_RESP_ERR_NO_ERROR:
            handle($message);
            break;
        case RD_KAFKA_RESP_ERR__TIMED_OUT:
            echo "Timedout\n";
            break;
        default:
            throw new \Exception($message->errstr());
            break;
    }
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
